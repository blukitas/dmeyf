)
#junto ambas listas de parametros en una sola
param_completo  <- c( param_basicos, param_ganadores )
#donde voy a guardar los resultados
tb_resultados  <- data.table( semilla= integer(),
subsamping= numeric(),
oficial= integer(),
meseta= integer(),
ganancia= numeric() )
# set.seed( 102191 )   #dejo fija esta semilla
set.seed( 135221 )   #dejo fija esta semilla
CANTIDAD_SEMILLAS  <- 50
#me genero un vector de semilla buscando numeros primos al azar
primos  <- generate_primes(min=100000, max=1000000)  #genero TODOS los numeros primos entre 100k y 1M
ksemillas  <- sample(primos)[ 1:CANTIDAD_SEMILLAS ]   #me quedo con CANTIDAD_SEMILLAS primos al azar
ksemillas  <- c( 999983, ksemillas )
for(  semillita  in  ksemillas )   #itero por las semillas
{
gc()
param_completo$seed  <- semillita   #asigno la semilla a esta corrida
set.seed( semillita )
#genero el modelo, los hiperparametros son siempre los mismos, la semilla CAMBIA
modelo  <- lgb.train( data= dtrain,
param= param_completo )
#aplico el modelo a los datos que elegi para testing  202011
prediccion  <- predict( modelo, data.matrix( dtest[ , campos_buenos, with=FALSE]) )
#creo una tabla con las probabilidades y la ganancia de ese registro
tb_meseta  <- as.data.table( list( "prob"=prediccion,  "gan"=  dtest[ , ifelse( clase_ternaria=="BAJA+2", 48750, - 1250)] ))
setorder( tb_meseta,  -prob )
#calculo la ganancia  para el ratio de corte original
pos_corte  <- as.integer( nrow(dtest)* param_completo$ratio_corte )
ganancia   <- tb_meseta[  1:pos_corte, sum(gan) ]
tb_resultados  <- rbind( tb_resultados, list( semillita,
kgen_subsampling,
1,  #SI es el punto oficial
pos_corte,
ganancia ) )  #agrego la ganancia estandar
for( punto_meseta  in seq( 5000, 15000, by=500 ) )  #itero desde 5000 a 15000 , de a 500
{
ganancia  <-  tb_meseta[ 1:punto_meseta, sum(gan) ]   #calculo la ganancia de los mejores punto_meseta registros
tb_resultados  <- rbind( tb_resultados, list( semillita,
kgen_subsampling,
0,  #No es el punto oficial
punto_meseta,
ganancia ) )  #agrego la ganancia estandar
}
#en cada iteracion GRABO
fwrite(  tb_resultados,
file= kresultados,
sep= "\t" )
}
primos  <- generate_primes(min=100000, max=1000000)  #genero TODOS los numeros primos entre 100k y 1M
require("primes")  #para generar semillas
install.packages("primes")
install.packages("primes")
install.packages("primes")
setwd("/home/lucas/Desktop/2021/Maestria/02.05.Data.Mining.E.y.F/Repo.TP/dmeyf/src/11.clustering/")  #Establezco el Working Directory
# dataset <- fread(paste0("./datasets_dataset_noviembre_",version,".gz"), stringsAsFactors= TRUE)
dataset <- fread(paste0("./datasets_dataset_2021_baja_1.csv"), stringsAsFactors= TRUE)
# install.packages('corrr')
# install.packages("gridExtra")
# install.packages('kableExtra')
# install.packages("tidymodels")
library('arules')
library("corrr")
library("GGally")
library("gridExtra")
library("kableExtra")
library("knitr")
library("MASS")
library("modelr")
library("openintro")
library("tidymodels")
library("tidyverse")
require("data.table")
version <-"v951"
# version <-"v952"
# version <-"v953"
# version <-"v1054"
# version <-"v747"
clusters <- read.table(paste0("./12.clustering",version,".csv"), header = TRUE, sep = ";")
head(clusters)
colnames(clusters) =  gsub(".x", "_mean", colnames(clusters), fixed = TRUE)
colnames(clusters) =  gsub(".y", "_std", colnames(clusters), fixed = TRUE)
head(clusters)
sort(colnames(clusters))
paste0("./datasets_nro_cli_cluster_",version,".csv")
nro_cli <- read.table(paste0("./datasets_nro_cli_cluster_",version,".csv"), header = TRUE, sep = "\t")
head(nro_cli)
paste0("./datasets_dataset_noviembre_",version,".gz")
setwd("/home/lucas/Desktop/2021/Maestria/02.05.Data.Mining.E.y.F/Repo.TP/dmeyf/src/11.clustering/")  #Establezco el Working Directory
# dataset <- fread(paste0("./datasets_dataset_noviembre_",version,".gz"), stringsAsFactors= TRUE)
dataset <- fread(paste0("./datasets_dataset_2021_baja_1.csv"), stringsAsFactors= TRUE)
dataset <- read.table(paste0("./datasets_dataset_2021_baja_1.csv"), header = TRUE, sep = ";")
# dataset <- fread(paste0("./datasets_dataset_noviembre_",version,".gz"), stringsAsFactors= TRUE)
dataset <- fread(paste0("./datasets_dataset_2021_baja_1.csv.gz"), stringsAsFactors= TRUE)
head(dataset)
# install.packages('corrr')
# install.packages("gridExtra")
# install.packages('kableExtra')
# install.packages("tidymodels")
library('arules')
library("corrr")
library("GGally")
library("gridExtra")
library("kableExtra")
library("knitr")
library("MASS")
library("modelr")
library("openintro")
library("tidymodels")
library("tidyverse")
require("data.table")
version <-"v951"
# version <-"v952"
# version <-"v953"
# version <-"v1054"
# version <-"v747"
clusters <- read.table(paste0("./12.clustering",version,".csv"), header = TRUE, sep = ";")
head(clusters)
colnames(clusters) =  gsub(".x", "_mean", colnames(clusters), fixed = TRUE)
colnames(clusters) =  gsub(".y", "_std", colnames(clusters), fixed = TRUE)
head(clusters)
sort(colnames(clusters))
paste0("./datasets_nro_cli_cluster_",version,".csv")
nro_cli <- read.table(paste0("./datasets_nro_cli_cluster_",version,".csv"), header = TRUE, sep = "\t")
head(nro_cli)
paste0("./datasets_dataset_noviembre_",version,".gz")
setwd("/home/lucas/Desktop/2021/Maestria/02.05.Data.Mining.E.y.F/Repo.TP/dmeyf/src/11.clustering/")  #Establezco el Working Directory
# dataset <- fread(paste0("./datasets_dataset_noviembre_",version,".gz"), stringsAsFactors= TRUE)
dataset <- fread(paste0("./datasets_dataset_2021_baja_1.csv.gz"), stringsAsFactors= TRUE)
head(dataset)
rowcount(dataset)
head(dataset)
table(dataset$clase_ternaria)
# install.packages('corrr')
# install.packages("gridExtra")
# install.packages('kableExtra')
# install.packages("tidymodels")
library('arules')
library("corrr")
library("GGally")
library("gridExtra")
library("kableExtra")
library("knitr")
library("MASS")
library("modelr")
library("openintro")
library("tidymodels")
library("tidyverse")
require("data.table")
version <-"v951"
# version <-"v952"
# version <-"v953"
# version <-"v1054"
# version <-"v747"
clusters <- read.table(paste0("./12.clustering",version,".csv"), header = TRUE, sep = ";")
head(clusters)
colnames(clusters) =  gsub(".x", "_mean", colnames(clusters), fixed = TRUE)
colnames(clusters) =  gsub(".y", "_std", colnames(clusters), fixed = TRUE)
head(clusters)
sort(colnames(clusters))
paste0("./datasets_nro_cli_cluster_",version,".csv")
nro_cli <- read.table(paste0("./datasets_nro_cli_cluster_",version,".csv"), header = TRUE, sep = "\t")
head(nro_cli)
paste0("./datasets_dataset_noviembre_",version,".gz")
setwd("/home/lucas/Desktop/2021/Maestria/02.05.Data.Mining.E.y.F/Repo.TP/dmeyf/src/11.clustering/")  #Establezco el Working Directory
# dataset <- fread(paste0("./datasets_dataset_noviembre_",version,".gz"), stringsAsFactors= TRUE)
dataset <- fread(paste0("./datasets_dataset_2021_baja_1.csv.gz"), stringsAsFactors= TRUE)
head(dataset)
table(dataset$clase_ternaria)
dataset <- dataset[clase_ternaria =="BAJA+1",]
gc()
head(dataset)
dataset[nro_cli, on = 'numero_de_cliente', cluster := cluster2]
colnames(dataset)[0:500]
colnames(dataset)[501:1100]
campos_buenos  <- c( "ctrx_quarter", "cpayroll_trx", "mcaja_ahorro", "mtarjeta_visa_consumo", "ctarjeta_visa_transacciones",
"mcuentas_saldo", "mrentabilidad_annual", "mprestamos_personales", "mactivos_margen", "mpayroll",
"Visa_mpagominimo", "Master_fechaalta", "cliente_edad", "chomebanking_transacciones", "Visa_msaldopesos",
"Visa_Fvencimiento", "mrentabilidad", "Visa_msaldototal", "Master_Fvencimiento", "mcuenta_corriente",
"Visa_mpagospesos", "Visa_fechaalta", "mcomisiones_mantenimiento", "Visa_mfinanciacion_limite",
"mtransferencias_recibidas", "cliente_antiguedad", "Visa_mconsumospesos", "Master_mfinanciacion_limite",
"mcaja_ahorro_dolares", "cproductos", "mcomisiones_otras", "thomebanking", "mcuenta_debitos_automaticos",
"mcomisiones", "Visa_cconsumos", "ccomisiones_otras", "Master_status", "mtransferencias_emitidas",
"mpagomiscuentas")
campos_lags = c()
for (i in campos_buenos)
{
campos_lags <- append(campos_lags, c(paste0(i, '_lag1'), paste0(i, '_delta1'),paste0(i, '_lag3'), paste0(i, '_delta3'),paste0(i, '_lag6'), paste0(i, '_delta6')) )
}
campos_lags
table(dataset$foto_mes)
ggplot(dataset, aes(x = cluster)) +
geom_bar(alpha = 0.75,
fill = "#1B9E77",
color = "white")+
labs(title = "Cant. personas cluster") +
labs(x = "Cluster", y = "Cantidad") +
theme_bw()
colnames(clusters)
# d2 <- dataset[,c("cliente_edad", "cliente_antiguedad","mcaja_ahorro", "mcaja_ahorro_lag1", "mcaja_ahorro_lag2", "mcaja_ahorro_lag3", "mcaja_ahorro_lag6")]
d2 <- dataset[,c("cliente_edad", "cliente_antiguedad","mcaja_ahorro", "mcaja_ahorro_lag1", "mcaja_ahorro_lag3", "mcaja_ahorro_lag6", "cluster")]
table(dataset$cluster)
ggplot(dataset, aes(x = cproductos, y = cliente_edad, fill = factor(cproductos))) +
geom_boxplot() +
facet_wrap(~cluster, labeller = label_both) +
scale_y_continuous(name = "Edad promedio cluster") +
scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos")
dataset[cluster==6,campos_buenos, with=FALSE]
ggplot(dataset, aes(x = cproductos, y = cliente_antiguedad, fill = factor(cproductos))) +
geom_boxplot() +
facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
#  echo=TRUE, fig.width=10, fig.height=5 }
ggplot(dataset, aes(x = cpayroll_trx, y = cliente_antiguedad, fill = factor(cpayroll_trx))) +
geom_boxplot() +
facet_wrap(~cluster, labeller = label_both, strip.position = "top", switch="both",scale="fixed") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
#  echo=TRUE, fig.width=10, fig.height=5 }
ggplot(dataset, aes(x = cluster, y = log(mactivos_margen), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top", switch="both",scale="fixed") +
theme_bw() +
theme(legend.position = "top")
#  echo=TRUE, fig.width=10, fig.height=5 }
ggplot(dataset, aes(x = cluster, y = log(mpasivos_margen), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top", switch="both",scale="fixed") +
theme_bw() +
theme(legend.position = "top")
#  echo=TRUE, fig.width=10, fig.height=5 }
ggplot(dataset, aes(x = cluster, y = log(mrentabilidad_annual), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top", switch="both",scale="fixed") +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset, aes(x=mrentabilidad, y=cproductos, color=factor(cluster))) +
geom_point(size=2) +
xlim(-100, 1000) +
ylim(2.5, 10) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset, aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset, aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.5) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster != 5], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.5) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster != 5], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster == 2], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster == 3], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster == 4], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster == 5], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster == 7], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
# echo=TRUE, fig.width=10}
ggplot(dataset[dataset$cluster != 5], aes(x=log(mrentabilidad), y=log(mrentabilidad_annual), color=factor(cluster))) +
geom_point(size=2, alpha=0.7) +
# xlim(-100, 2000) +
# ylim(0, 2e5) +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cproductos, y = log(mrentabilidad_annual), fill = factor(cproductos))) +
geom_boxplot() +
facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cproductos, y = log(mrentabilidad_annual), fill = factor(cproductos))) +
geom_boxplot() +
facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = log(mrentabilidad_annual), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
# install.packages('corrr')
# install.packages("gridExtra")
# install.packages('kableExtra')
# install.packages("tidymodels")
library('arules')
library("corrr")
require("data.table")
require("dplyr")
library("GGally")
library("gridExtra")
library("kableExtra")
library("knitr")
library("MASS")
library("modelr")
library("openintro")
library("tidymodels")
library("tidyverse")
# version <-"v952"
version <-"v951"
# version <-"v1054"
# version <-"v747"
clusters <- read.table(paste0("../12.clustering",version,".csv"), header = TRUE, sep = ";")
head(clusters)
colnames(clusters) =  gsub(".x", "_mean", colnames(clusters), fixed = TRUE)
colnames(clusters) =  gsub(".y", "_std", colnames(clusters), fixed = TRUE)
head(clusters)
guardar_dataset <- function( dataset, columnas , arch_destino )
{
#grabo con nombre extendido
fwrite( clusters[, append(c("cluster2"), columnas)],
file=arch_destino,
sep= "," )
}
guardar_dataset(clusters, colnames(clusters %>% select(matches("mtransferencias_recibidas"))), './mtransferencias_recibidas.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("mtransferencias_emitidas"))), './mtransferencias_emitidas.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("mpagomiscuentas"))), './mpagomiscuentas.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("thomebanking"))), './thomebanking.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("Visa_mfinanciacion_limite"))), './Visa_mfinanciacion_limite.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("Visa_mpagominimo"))), './Visa_mpagominimo.csv')
guardar_dataset(clusters, colnames(clusters %>% select(matches("mactivos_margen"))), './mactivos_margen.csv')
ggplot(dataset, aes(x = cluster, y = log(mpayroll), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = mpayroll, fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
)
ggplot(dataset, aes(x = cluster, y = log(mpayroll), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = log10(mpayroll), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = log10(mrentabilidad), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = log10mttarjeta_visa_debitos_automaticos, fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = mttarjeta_visa_debitos_automaticos, fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
)
ggplot(dataset, aes(x = cluster, y = log10(mttarjeta_visa_debitos_automaticos), fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
ggplot(dataset, aes(x = cluster, y = cpayroll_trx, fill = factor(cluster))) +
geom_boxplot() +
# facet_wrap(~cluster, labeller = label_both, strip.position = "top") +
# scale_y_continuous(name = "Edad promedio cluster") +
# scale_x_discrete(labels=factor(dataset$cproductos), name = "cant productos") +
# labs(title = "Cantidad de productos y antiguedad promedio de los clientes") +
# labs(x = "Cantidad de productos", y = "Antiguedad promedio (En meses)") +
theme_bw() +
theme(legend.position = "top")
table(cluster, cpayroll_trx)
table(dataset$cluster, dataset$cpayroll_trx)
prop.table(dataset$cluster, dataset$cpayroll_trx)
prop.table(table(dataset$cluster, dataset$cpayroll_trx))
prop.table(table(dataset$cpayroll_trx, dataset$cluster))
cluster
prop.table(table(dataset$cluster, dataset$cpayroll_trx))
table(dataset$cluster, dataset$cpayroll_trx)
#limpio la memoria
rm( list=ls() )  #remove all objects
gc()             #garbage collection
require("data.table")
setwd("~/buckets/b1/")
setwd("/home/lucas/Desktop/2021/Maestria/02.05.Data.Mining.E.y.F/Repo.TP/dmeyf/src/99.buckets/")  #Establezco el Working Directory
corrida <- list()
# corrida$arch_testing1  <- "./work/E5008/E5008_981_epic.txt"
corrida$arch_testing1  <- "./work/E5009/E5009_982_epic.txt"
corrida$arch_testing2  <- "./work/E5029/E5029_988_184_epic.txt"
mean(resultados_testing1[ oficial==1, ganancia ][ 1:20])
mean(resultados_testing2[ oficial==1, ganancia ][1:20])
#leo los datasets
resultados_testing1  <- fread( corrida$arch_testing1 )
resultados_testing2  <- fread( corrida$arch_testing2 )
mean(resultados_testing1[ oficial==1, ganancia ][ 1:20])
mean(resultados_testing2[ oficial==1, ganancia ][1:20])
#Deberia dar que son distintos (p-value < 0.05)
wilcox.test(  resultados_testing1[ oficial==1, ganancia ][  1:20],
resultados_testing2[ oficial==1, ganancia ][  1:20],
paired=TRUE
)
corrida$arch_testing2  <- "./work/E5029/E5029_988_144_epic.txt"
resultados_testing2  <- fread( corrida$arch_testing2 )
wilcox.test(  resultados_testing1[ oficial==1, ganancia ][ 1:10],
resultados_testing2[ oficial==1, ganancia ][11:20], paired=TRUE  )
wilcox.test(  resultados_testing1[ oficial==1, ganancia ][  1:20],
resultados_testing2[ oficial==1, ganancia ][  1:20],
paired=TRUE
)
